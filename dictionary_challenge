# Write your sum_values function here:
def sum_values(my_dictionary):
  value_sum = 0
  for value in my_dictionary.values():
    value_sum += value
  return value_sum
# Uncomment these function calls to test your sum_values function:
print(sum_values({"milk":5, "eggs":2, "flour": 3}))
# should print 10
print(sum_values({10:1, 100:2, 1000:3}))
# should print 6

#-----------------check the dictionary values sum up-----------------------------

# Write your sum_even_keys function here:
def sum_even_keys(my_dictionary):
  key_sum = 0
  for i in my_dictionary.keys():
    if i % 2 == 0:
      key_sum += my_dictionary[i]
  return key_sum
# Uncomment these function calls to test your  function:
print(sum_even_keys({1:5, 2:2, 3:3}))
# should print 2
print(sum_even_keys({10:1, 100:2, 1000:3}))
# should print 6
#---------------------how to call dictionary's specific value--------------------
# Write your values_that_are_keys function here:
def values_that_are_keys(my_dictionary):
  value_are_keys = []
  for value in my_dictionary.values():
    if value in my_dictionary.keys():
      value_are_keys.append(value)
  return value_are_keys
# Uncomment these function calls to test your  function:
print(values_that_are_keys({1:100, 2:1, 3:4, 4:10}))
# should print [1, 4]
print(values_that_are_keys({"a":"apple", "b":"a", "c":100}))
# should print ["a"]

#-------------------------------------------------------------------------------

def max_key(my_dictionary):
  largest_key = float("-inf")
  largest_value = float("-inf")
  for key, value in my_dictionary.items():
    if value > largest_value:
      largest_value = value
      largest_key = key
  return largest_key
  
#-------------------how to retrieve the max or min number---------------------
# remember the float('-inf')


def word_length_dictionary(words):
  words_length = {}
  for word in words:
    words_length[word] = len(word)
  return words_length
# Uncomment these function calls to test your  function:
print(word_length_dictionary(["apple", "dog", "cat"]))
# should print {"apple":5, "dog": 3, "cat":3}
print(word_length_dictionary(["a", ""]))
# should print {"a": 1, "": 0}
#-------------------check words length-----------------------------------------
def frequency_dictionary(words):
 freq_word = {} 
 for word in words:
   if word not in freq_word:
     freq_word[word] = 1
   else:
     freq_word[word] += 1
 return freq_word 

# Uncomment these function calls to test your  function:
print(frequency_dictionary(["apple", "apple", "cat", 1]))
# should print {"apple":2, "cat":1, 1:1}
print(frequency_dictionary([0,0,0,0,0]))
# should print {0:5}t

#---------------------dictionary accumulation ----------------------------------

def count_first_letter(names):
  letters = {}
  for key in names:
    first_letter = key[0]
    if first_letter not in letters:
      letters[first_letter] = 0
    letters[first_letter] += len(names[key])
  return letters



